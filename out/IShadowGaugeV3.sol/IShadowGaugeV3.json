{"abi":[{"type":"function","name":"addRewards","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cachePeriodEarned","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"caching","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"earned","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"reward","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"firstPeriod","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getPeriodReward","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"tokens","type":"address[]","internalType":"address[]"},{"name":"owner","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getPeriodReward","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"tokens","type":"address[]","internalType":"address[]"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getReward","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"tokens","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRewardForOwner","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"tokens","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRewardTokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isReward","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastClaimByToken","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"_positionHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"left","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"notifyRewardAmount","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"notifyRewardAmountForPeriod","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"period","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"notifyRewardAmountNextPeriod","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"periodClaimedAmount","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"_positionHash","type":"bytes32","internalType":"bytes32"},{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"periodEarned","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"periodEarned","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"positionHash","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"removeRewards","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rewardRate","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"rewards","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"tokenTotalSupplyByPeriod","inputs":[{"name":"period","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"Bribe","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"reward","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"period","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ClaimRewards","inputs":[{"name":"period","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_positionHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"},{"name":"reward","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NotifyReward","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"reward","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"period","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardAdded","inputs":[{"name":"reward","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RewardRemoved","inputs":[{"name":"reward","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"CANT_CLAIM_FUTURE","inputs":[]},{"type":"error","name":"NOT_AUTHORIZED","inputs":[]},{"type":"error","name":"NOT_GT_ZERO","inputs":[{"name":"amt","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NOT_VOTER","inputs":[]},{"type":"error","name":"RETRO","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addRewards(address)":"e73b49b4","cachePeriodEarned(uint256,address,address,uint256,int24,int24,bool)":"be171c5e","earned(address,uint256)":"3e491d47","firstPeriod()":"c4e3a63b","getPeriodReward(uint256,address[],address,uint256,int24,int24,address)":"29b2f637","getPeriodReward(uint256,address[],uint256,address)":"8ed6a18c","getReward(uint256,address[])":"f5f8d365","getRewardForOwner(uint256,address[])":"a7852afa","getRewardTokens()":"c4f59f9b","isReward(address)":"4d5ce038","lastClaimByToken(address,bytes32)":"7af61833","left(address)":"99bcc052","notifyRewardAmount(address,uint256)":"b66503cf","notifyRewardAmountForPeriod(address,uint256,uint256)":"1b9e88b1","notifyRewardAmountNextPeriod(address,uint256)":"e77b11d2","periodClaimedAmount(uint256,bytes32,address)":"e102dac4","periodEarned(uint256,address,address,uint256,int24,int24)":"eb6ebc27","periodEarned(uint256,address,uint256)":"62da4afd","positionHash(address,uint256,int24,int24)":"a2305756","removeRewards(address)":"9dfb3381","rewardRate(address)":"221ca18c","rewards(uint256)":"f301af42","tokenTotalSupplyByPeriod(uint256,address)":"e92a9fa9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CANT_CLAIM_FUTURE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_AUTHORIZED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"NOT_GT_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_VOTER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RETRO\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"Bribe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_positionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"NotifyReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"RewardRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"caching\",\"type\":\"bool\"}],\"name\":\"cachePeriodEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getPeriodReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getPeriodReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getRewardForOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"isReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_positionHash\",\"type\":\"bytes32\"}],\"name\":\"lastClaimByToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"left\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmountForPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmountNextPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_positionHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"periodClaimedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"periodEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"periodEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"positionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"removeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenTotalSupplyByPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Bribe(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens bribed.\",\"from\":\"The address from which the bribe is made.\",\"period\":\"The period for which the bribe is made.\",\"reward\":\"The address of the reward token.\"}},\"ClaimRewards(uint256,bytes32,address,address,uint256)\":{\"params\":{\"_positionHash\":\"The identifier of the NFP for which rewards are claimed.\",\"amount\":\"The amount of rewards claimed.\",\"period\":\"The period for which the rewards are claimed.\",\"receiver\":\"The address of the receiver of the claimed rewards.\",\"reward\":\"The address of the reward token.\"}},\"NotifyReward(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of rewards notified.\",\"from\":\"The address from which the reward is notified.\",\"period\":\"The period for which the rewards are notified.\",\"reward\":\"The address of the reward token.\"}}},\"kind\":\"dev\",\"methods\":{\"cachePeriodEarned(uint256,address,address,uint256,int24,int24,bool)\":{\"details\":\"used by getReward() and saves gas by saving states\",\"params\":{\"caching\":\"Whether to cache the results or not.\",\"index\":\"The index for which to retrieve the earned rewards.\",\"owner\":\"The address of the owner for which to retrieve the earned rewards.\",\"period\":\"The period for which to retrieve the earned rewards.\",\"tickLower\":\"The tick lower bound for which to retrieve the earned rewards.\",\"tickUpper\":\"The tick upper bound for which to retrieve the earned rewards.\",\"token\":\"The address of the token for which to retrieve the earned rewards.\"},\"returns\":{\"_0\":\"The earned rewards for the specified period, token, owner, index, tickLower, and tickUpper.\"}},\"earned(address,uint256)\":{\"params\":{\"token\":\"The address of the token for which to retrieve the earned rewards.\",\"tokenId\":\"The identifier of the specific NFP for which to retrieve the earned rewards.\"},\"returns\":{\"reward\":\"The amount of rewards earned for the specified NFP and tokens.\"}},\"firstPeriod()\":{\"returns\":{\"_0\":\"The value of the firstPeriod variable.\"}},\"getPeriodReward(uint256,address[],address,uint256,int24,int24,address)\":{\"params\":{\"index\":\"The index for which to retrieve the rewards.\",\"owner\":\"The address of the owner for which to retrieve the rewards.\",\"period\":\"The period for which to retrieve the rewards.\",\"receiver\":\"The address of the receiver of the rewards.\",\"tickLower\":\"The tick lower bound for which to retrieve the rewards.\",\"tickUpper\":\"The tick upper bound for which to retrieve the rewards.\",\"tokens\":\"An array of token addresses for which to retrieve the rewards.\"}},\"getPeriodReward(uint256,address[],uint256,address)\":{\"params\":{\"period\":\"The period for which to retrieve the reward amount.\",\"receiver\":\"The address of the receiver of the reward amount.\",\"tokenId\":\"The identifier of the specific NFP for which to retrieve the reward amount.\",\"tokens\":\"The addresses of the tokens for which to retrieve the reward amount.\"}},\"getRewardTokens()\":{\"returns\":{\"_0\":\"An array of reward token addresses.\"}},\"isReward(address)\":{\"params\":{\"reward\":\"The address to check.\"},\"returns\":{\"_0\":\"A boolean indicating whether the address is a valid reward.\"}},\"lastClaimByToken(address,bytes32)\":{\"params\":{\"_positionHash\":\"The identifier of the NFP for which to retrieve the last claimed period.\",\"token\":\"The address of the reward token for which to retrieve the last claimed period.\"},\"returns\":{\"_0\":\"The last claimed period for the specified token and token ID.\"}},\"left(address)\":{\"details\":\"included to support voter's left() check during distribute().\",\"params\":{\"token\":\"The address of the token for which to retrieve the remaining amount.\"},\"returns\":{\"_0\":\"The amount of tokens left to distribute in this period.\"}},\"notifyRewardAmount(address,uint256)\":{\"params\":{\"amount\":\"The amount of rewards to be distributed.\",\"token\":\"The address of the token for which to notify the reward amount.\"}},\"notifyRewardAmountForPeriod(address,uint256,uint256)\":{\"details\":\"does not push feesrequires reward token to be whitelisted\"},\"notifyRewardAmountNextPeriod(address,uint256)\":{\"details\":\"does not push feesrequires reward token to be whitelisted\"},\"periodClaimedAmount(uint256,bytes32,address)\":{\"params\":{\"_positionHash\":\"The identifier of the NFP for which to retrieve the claimed amount.\",\"period\":\"The period for which to retrieve the claimed amount.\",\"reward\":\"The address of the token for the claimed amount.\"},\"returns\":{\"_0\":\"The claimed amount for the specified period, token ID, and user address.\"}},\"periodEarned(uint256,address,address,uint256,int24,int24)\":{\"params\":{\"index\":\"The index for which to retrieve the earned rewards.\",\"owner\":\"The address of the owner for which to retrieve the earned rewards.\",\"period\":\"The period for which to retrieve the earned rewards.\",\"tickLower\":\"The tick lower bound for which to retrieve the earned rewards.\",\"tickUpper\":\"The tick upper bound for which to retrieve the earned rewards.\",\"token\":\"The address of the token for which to retrieve the earned rewards.\"},\"returns\":{\"_0\":\"The earned rewards for the specified period, token, owner, index, tickLower, and tickUpper.\"}},\"periodEarned(uint256,address,uint256)\":{\"params\":{\"period\":\"The period for which to retrieve the earned rewards.\",\"token\":\"The address of the token for which to retrieve the earned rewards.\",\"tokenId\":\"The identifier of the specific NFP for which to retrieve the earned rewards.\"},\"returns\":{\"_0\":\"reward The amount of rewards earned for the specified NFP and tokens.\"}},\"positionHash(address,uint256,int24,int24)\":{\"params\":{\"index\":\"The index of the position\",\"owner\":\"The address of the position owner\",\"tickLower\":\"The lower tick boundary of the position\",\"tickUpper\":\"The upper tick boundary of the position\"},\"returns\":{\"_0\":\"_hash The hash used to store positions in a mapping\"}},\"rewardRate(address)\":{\"details\":\"this method returns the base rate without boost\",\"params\":{\"token\":\"The address of the reward for which to retrieve the reward rate.\"},\"returns\":{\"_0\":\"The reward rate for the specified reward address.\"}},\"rewards(uint256)\":{\"params\":{\"index\":\"The index of the reward address to retrieve.\"},\"returns\":{\"_0\":\"The reward address at the specified index.\"}},\"tokenTotalSupplyByPeriod(uint256,address)\":{\"params\":{\"period\":\"The period for which to retrieve the total supply.\",\"token\":\"The address of the token for which to retrieve the total supply.\"},\"returns\":{\"_0\":\"The total supply of the specified token for the given period.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Bribe(address,address,uint256,uint256)\":{\"notice\":\"Emitted when a bribe is made.\"},\"ClaimRewards(uint256,bytes32,address,address,uint256)\":{\"notice\":\"Emitted when rewards are claimed.\"},\"NotifyReward(address,address,uint256,uint256)\":{\"notice\":\"Emitted when a reward notification is made.\"},\"RewardAdded(address)\":{\"notice\":\"Emitted when a new reward token was pushed to the rewards array\"},\"RewardRemoved(address)\":{\"notice\":\"Emitted when a reward token was removed from the rewards array\"}},\"kind\":\"user\",\"methods\":{\"cachePeriodEarned(uint256,address,address,uint256,int24,int24,bool)\":{\"notice\":\"Retrieves the earned rewards for a specific period, token, owner, index, tickLower, and tickUpper.\"},\"earned(address,uint256)\":{\"notice\":\"Returns the amount of rewards earned for an NFP.\"},\"firstPeriod()\":{\"notice\":\"Retrieves the value of the firstPeriod variable.\"},\"getPeriodReward(uint256,address[],address,uint256,int24,int24,address)\":{\"notice\":\"Retrieves the rewards for a specific period, set of tokens, owner, index, tickLower, tickUpper, and receiver.\"},\"getPeriodReward(uint256,address[],uint256,address)\":{\"notice\":\"Retrieves the reward amount for a specific period, NFP, and token addresses.\"},\"getReward(uint256,address[])\":{\"notice\":\"retrieves rewards based on an NFP id and an array of tokens\"},\"getRewardForOwner(uint256,address[])\":{\"notice\":\"get reward for an owner of an NFP\"},\"getRewardTokens()\":{\"notice\":\"Returns an array of reward token addresses.\"},\"isReward(address)\":{\"notice\":\"Checks if a given address is a valid reward.\"},\"lastClaimByToken(address,bytes32)\":{\"notice\":\"Retrieves the last claimed period for a specific token, token ID combination.\"},\"left(address)\":{\"notice\":\"Retrieves the getTokenTotalSupplyByPeriod of the current period.\"},\"notifyRewardAmount(address,uint256)\":{\"notice\":\"Notifies the contract about the amount of rewards to be distributed for a specific token.\"},\"notifyRewardAmountForPeriod(address,uint256,uint256)\":{\"notice\":\"Notifies rewards for periods greater than current period\"},\"notifyRewardAmountNextPeriod(address,uint256)\":{\"notice\":\"Notifies rewards for the next period\"},\"periodClaimedAmount(uint256,bytes32,address)\":{\"notice\":\"Retrieves the claimed amount for a specific period, position hash, and user address.\"},\"periodEarned(uint256,address,address,uint256,int24,int24)\":{\"notice\":\"Retrieves the earned rewards for a specific period, token, owner, index, tickLower, and tickUpper.\"},\"periodEarned(uint256,address,uint256)\":{\"notice\":\"Returns the amount of rewards earned during a period for an NFP.\"},\"positionHash(address,uint256,int24,int24)\":{\"notice\":\"Returns the hash used to store positions in a mapping\"},\"rewardRate(address)\":{\"notice\":\"Retrieves the reward rate for a specific reward address.\"},\"rewards(uint256)\":{\"notice\":\"Retrieves the reward address at the specified index in the rewards array.\"},\"tokenTotalSupplyByPeriod(uint256,address)\":{\"notice\":\"Retrieves the total supply of a specific token for a given period.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IShadowGaugeV3.sol\":\"IShadowGaugeV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"contracts/interfaces/IShadowGaugeV3.sol\":{\"keccak256\":\"0x993179ea4e380c707cffb4e33cad5be36c71290b8ce3c7643cbf158468700ba5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d92c9139d0fddcf0421061574944269ac335af7eeab4525926f98d886083746c\",\"dweb:/ipfs/QmWrfRKwYaUeiFpaJ2rKE3FWbVPm1nrStrUYYzPGN56Vxw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CANT_CLAIM_FUTURE"},{"inputs":[],"type":"error","name":"NOT_AUTHORIZED"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"}],"type":"error","name":"NOT_GT_ZERO"},{"inputs":[],"type":"error","name":"NOT_VOTER"},{"inputs":[],"type":"error","name":"RETRO"},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"reward","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"period","type":"uint256","indexed":false}],"type":"event","name":"Bribe","anonymous":false},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256","indexed":false},{"internalType":"bytes32","name":"_positionHash","type":"bytes32","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":false},{"internalType":"address","name":"reward","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ClaimRewards","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"reward","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"period","type":"uint256","indexed":false}],"type":"event","name":"NotifyReward","anonymous":false},{"inputs":[{"internalType":"address","name":"reward","type":"address","indexed":false}],"type":"event","name":"RewardAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"reward","type":"address","indexed":false}],"type":"event","name":"RewardRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addRewards"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"bool","name":"caching","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"cachePeriodEarned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"earned","outputs":[{"internalType":"uint256","name":"reward","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"firstPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"getPeriodReward"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"getPeriodReward"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"getReward"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"getRewardForOwner"},{"inputs":[],"stateMutability":"view","type":"function","name":"getRewardTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"isReward","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes32","name":"_positionHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"lastClaimByToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"left","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"notifyRewardAmount"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"period","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"notifyRewardAmountForPeriod"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"notifyRewardAmountNextPeriod"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"bytes32","name":"_positionHash","type":"bytes32"},{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"periodClaimedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"periodEarned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"periodEarned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"pure","type":"function","name":"positionHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeRewards"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"rewards","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"tokenTotalSupplyByPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"cachePeriodEarned(uint256,address,address,uint256,int24,int24,bool)":{"details":"used by getReward() and saves gas by saving states","params":{"caching":"Whether to cache the results or not.","index":"The index for which to retrieve the earned rewards.","owner":"The address of the owner for which to retrieve the earned rewards.","period":"The period for which to retrieve the earned rewards.","tickLower":"The tick lower bound for which to retrieve the earned rewards.","tickUpper":"The tick upper bound for which to retrieve the earned rewards.","token":"The address of the token for which to retrieve the earned rewards."},"returns":{"_0":"The earned rewards for the specified period, token, owner, index, tickLower, and tickUpper."}},"earned(address,uint256)":{"params":{"token":"The address of the token for which to retrieve the earned rewards.","tokenId":"The identifier of the specific NFP for which to retrieve the earned rewards."},"returns":{"reward":"The amount of rewards earned for the specified NFP and tokens."}},"firstPeriod()":{"returns":{"_0":"The value of the firstPeriod variable."}},"getPeriodReward(uint256,address[],address,uint256,int24,int24,address)":{"params":{"index":"The index for which to retrieve the rewards.","owner":"The address of the owner for which to retrieve the rewards.","period":"The period for which to retrieve the rewards.","receiver":"The address of the receiver of the rewards.","tickLower":"The tick lower bound for which to retrieve the rewards.","tickUpper":"The tick upper bound for which to retrieve the rewards.","tokens":"An array of token addresses for which to retrieve the rewards."}},"getPeriodReward(uint256,address[],uint256,address)":{"params":{"period":"The period for which to retrieve the reward amount.","receiver":"The address of the receiver of the reward amount.","tokenId":"The identifier of the specific NFP for which to retrieve the reward amount.","tokens":"The addresses of the tokens for which to retrieve the reward amount."}},"getRewardTokens()":{"returns":{"_0":"An array of reward token addresses."}},"isReward(address)":{"params":{"reward":"The address to check."},"returns":{"_0":"A boolean indicating whether the address is a valid reward."}},"lastClaimByToken(address,bytes32)":{"params":{"_positionHash":"The identifier of the NFP for which to retrieve the last claimed period.","token":"The address of the reward token for which to retrieve the last claimed period."},"returns":{"_0":"The last claimed period for the specified token and token ID."}},"left(address)":{"details":"included to support voter's left() check during distribute().","params":{"token":"The address of the token for which to retrieve the remaining amount."},"returns":{"_0":"The amount of tokens left to distribute in this period."}},"notifyRewardAmount(address,uint256)":{"params":{"amount":"The amount of rewards to be distributed.","token":"The address of the token for which to notify the reward amount."}},"notifyRewardAmountForPeriod(address,uint256,uint256)":{"details":"does not push feesrequires reward token to be whitelisted"},"notifyRewardAmountNextPeriod(address,uint256)":{"details":"does not push feesrequires reward token to be whitelisted"},"periodClaimedAmount(uint256,bytes32,address)":{"params":{"_positionHash":"The identifier of the NFP for which to retrieve the claimed amount.","period":"The period for which to retrieve the claimed amount.","reward":"The address of the token for the claimed amount."},"returns":{"_0":"The claimed amount for the specified period, token ID, and user address."}},"periodEarned(uint256,address,address,uint256,int24,int24)":{"params":{"index":"The index for which to retrieve the earned rewards.","owner":"The address of the owner for which to retrieve the earned rewards.","period":"The period for which to retrieve the earned rewards.","tickLower":"The tick lower bound for which to retrieve the earned rewards.","tickUpper":"The tick upper bound for which to retrieve the earned rewards.","token":"The address of the token for which to retrieve the earned rewards."},"returns":{"_0":"The earned rewards for the specified period, token, owner, index, tickLower, and tickUpper."}},"periodEarned(uint256,address,uint256)":{"params":{"period":"The period for which to retrieve the earned rewards.","token":"The address of the token for which to retrieve the earned rewards.","tokenId":"The identifier of the specific NFP for which to retrieve the earned rewards."},"returns":{"_0":"reward The amount of rewards earned for the specified NFP and tokens."}},"positionHash(address,uint256,int24,int24)":{"params":{"index":"The index of the position","owner":"The address of the position owner","tickLower":"The lower tick boundary of the position","tickUpper":"The upper tick boundary of the position"},"returns":{"_0":"_hash The hash used to store positions in a mapping"}},"rewardRate(address)":{"details":"this method returns the base rate without boost","params":{"token":"The address of the reward for which to retrieve the reward rate."},"returns":{"_0":"The reward rate for the specified reward address."}},"rewards(uint256)":{"params":{"index":"The index of the reward address to retrieve."},"returns":{"_0":"The reward address at the specified index."}},"tokenTotalSupplyByPeriod(uint256,address)":{"params":{"period":"The period for which to retrieve the total supply.","token":"The address of the token for which to retrieve the total supply."},"returns":{"_0":"The total supply of the specified token for the given period."}}},"version":1},"userdoc":{"kind":"user","methods":{"cachePeriodEarned(uint256,address,address,uint256,int24,int24,bool)":{"notice":"Retrieves the earned rewards for a specific period, token, owner, index, tickLower, and tickUpper."},"earned(address,uint256)":{"notice":"Returns the amount of rewards earned for an NFP."},"firstPeriod()":{"notice":"Retrieves the value of the firstPeriod variable."},"getPeriodReward(uint256,address[],address,uint256,int24,int24,address)":{"notice":"Retrieves the rewards for a specific period, set of tokens, owner, index, tickLower, tickUpper, and receiver."},"getPeriodReward(uint256,address[],uint256,address)":{"notice":"Retrieves the reward amount for a specific period, NFP, and token addresses."},"getReward(uint256,address[])":{"notice":"retrieves rewards based on an NFP id and an array of tokens"},"getRewardForOwner(uint256,address[])":{"notice":"get reward for an owner of an NFP"},"getRewardTokens()":{"notice":"Returns an array of reward token addresses."},"isReward(address)":{"notice":"Checks if a given address is a valid reward."},"lastClaimByToken(address,bytes32)":{"notice":"Retrieves the last claimed period for a specific token, token ID combination."},"left(address)":{"notice":"Retrieves the getTokenTotalSupplyByPeriod of the current period."},"notifyRewardAmount(address,uint256)":{"notice":"Notifies the contract about the amount of rewards to be distributed for a specific token."},"notifyRewardAmountForPeriod(address,uint256,uint256)":{"notice":"Notifies rewards for periods greater than current period"},"notifyRewardAmountNextPeriod(address,uint256)":{"notice":"Notifies rewards for the next period"},"periodClaimedAmount(uint256,bytes32,address)":{"notice":"Retrieves the claimed amount for a specific period, position hash, and user address."},"periodEarned(uint256,address,address,uint256,int24,int24)":{"notice":"Retrieves the earned rewards for a specific period, token, owner, index, tickLower, and tickUpper."},"periodEarned(uint256,address,uint256)":{"notice":"Returns the amount of rewards earned during a period for an NFP."},"positionHash(address,uint256,int24,int24)":{"notice":"Returns the hash used to store positions in a mapping"},"rewardRate(address)":{"notice":"Retrieves the reward rate for a specific reward address."},"rewards(uint256)":{"notice":"Retrieves the reward address at the specified index in the rewards array."},"tokenTotalSupplyByPeriod(uint256,address)":{"notice":"Retrieves the total supply of a specific token for a given period."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IShadowGaugeV3.sol":"IShadowGaugeV3"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/interfaces/IShadowGaugeV3.sol":{"keccak256":"0x993179ea4e380c707cffb4e33cad5be36c71290b8ce3c7643cbf158468700ba5","urls":["bzz-raw://d92c9139d0fddcf0421061574944269ac335af7eeab4525926f98d886083746c","dweb:/ipfs/QmWrfRKwYaUeiFpaJ2rKE3FWbVPm1nrStrUYYzPGN56Vxw"],"license":"BUSL-1.1"}},"version":1},"id":12}