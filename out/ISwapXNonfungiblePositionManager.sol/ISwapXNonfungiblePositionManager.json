{"abi":[{"type":"function","name":"approveForFarming","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"approve","type":"bool","internalType":"bool"},{"name":"farmingAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"burn","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"calculateLatestWithdrawalFeesLiquidity","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"latestWithdrawalFeeLiquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"calculatePendingWithdrawalFeesLiquidity","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"pendingWithdrawalFeeLiquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"collect","inputs":[{"name":"params","type":"tuple","internalType":"struct ISwapXNonfungiblePositionManager.CollectParams","components":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0Max","type":"uint128","internalType":"uint128"},{"name":"amount1Max","type":"uint128","internalType":"uint128"}]}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"decreaseLiquidity","inputs":[{"name":"params","type":"tuple","internalType":"struct ISwapXNonfungiblePositionManager.DecreaseLiquidityParams","components":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"defaultWithdrawalFeesVault","inputs":[],"outputs":[{"name":"vault","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"farmingApprovals","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"farmingCenter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getWithdrawalFeePoolParams","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"params","type":"tuple","internalType":"struct ISwapXNonfungiblePositionManager.WithdrawalFeePoolParams","components":[{"name":"apr0","type":"uint64","internalType":"uint64"},{"name":"apr1","type":"uint64","internalType":"uint64"},{"name":"withdrawalFee","type":"uint16","internalType":"uint16"},{"name":"feeVaults","type":"tuple[]","internalType":"struct ISwapXNonfungiblePositionManager.FeesVault[]","components":[{"name":"feeVault","type":"address","internalType":"address"},{"name":"fee","type":"uint16","internalType":"uint16"}]}]}],"stateMutability":"view"},{"type":"function","name":"increaseLiquidity","inputs":[{"name":"params","type":"tuple","internalType":"struct ISwapXNonfungiblePositionManager.IncreaseLiquidityParams","components":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"amount0Desired","type":"uint256","internalType":"uint256"},{"name":"amount1Desired","type":"uint256","internalType":"uint256"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"isApprovedOrOwner","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"params","type":"tuple","internalType":"struct ISwapXNonfungiblePositionManager.MintParams","components":[{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"amount0Desired","type":"uint256","internalType":"uint256"},{"name":"amount1Desired","type":"uint256","internalType":"uint256"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"positions","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"nonce","type":"uint88","internalType":"uint88"},{"name":"operator","type":"address","internalType":"address"},{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"feeGrowthInside0LastX128","type":"uint256","internalType":"uint256"},{"name":"feeGrowthInside1LastX128","type":"uint256","internalType":"uint256"},{"name":"tokensOwed0","type":"uint128","internalType":"uint128"},{"name":"tokensOwed1","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"positionsWithdrawalFee","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"lastUpdateTimestamp","type":"uint32","internalType":"uint32"},{"name":"withdrawalFeeLiquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"setFarmingCenter","inputs":[{"name":"newFarmingCenter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenAPR","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"apr0","type":"uint64","internalType":"uint64"},{"name":"apr1","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultAddress","inputs":[{"name":"newVault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultsForPool","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"fees","type":"uint16[]","internalType":"uint16[]"},{"name":"vaults","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setWithdrawalFee","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"newWithdrawalFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"switchFarmingStatus","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"toActive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"tokenFarmedIn","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"Collect","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"recipient","type":"address","indexed":false,"internalType":"address"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DecreaseLiquidity","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"withdrawalFeeliquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FarmingCenter","inputs":[{"name":"farmingCenterAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FarmingFailed","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FeeVaultForPool","inputs":[{"name":"pool","type":"address","indexed":false,"internalType":"address"},{"name":"feeVault","type":"address","indexed":false,"internalType":"address"},{"name":"fee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"IncreaseLiquidity","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"liquidityDesired","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"actualLiquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"pool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approveForFarming(uint256,bool,address)":"832f630a","burn(uint256)":"42966c68","calculateLatestWithdrawalFeesLiquidity(uint256)":"12e724ba","calculatePendingWithdrawalFeesLiquidity(uint256)":"3edc2332","collect((uint256,address,uint128,uint128))":"fc6f7865","decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":"0c49ccbe","defaultWithdrawalFeesVault()":"dba5281f","farmingApprovals(uint256)":"2d0b22de","farmingCenter()":"dd56e5d8","getWithdrawalFeePoolParams(address)":"8692bd7d","increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":"219f5d17","isApprovedOrOwner(address,uint256)":"430c2081","mint((address,address,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":"9cc1a283","positions(uint256)":"99fbab88","positionsWithdrawalFee(uint256)":"f143536d","setFarmingCenter(address)":"4d10862d","setTokenAPR(address,uint64,uint64)":"aa7e1abd","setVaultAddress(address)":"85535cc5","setVaultsForPool(address,uint16[],address[])":"135e53e0","setWithdrawalFee(address,uint16)":"6301727b","switchFarmingStatus(uint256,bool)":"70227515","tokenFarmedIn(uint256)":"e7ce18a3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"withdrawalFeeliquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"farmingCenterAddress\",\"type\":\"address\"}],\"name\":\"FarmingCenter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"FarmingFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"FeeVaultForPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityDesired\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"actualLiquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approve\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"farmingAddress\",\"type\":\"address\"}],\"name\":\"approveForFarming\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculateLatestWithdrawalFeesLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"latestWithdrawalFeeLiquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculatePendingWithdrawalFeesLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"pendingWithdrawalFeeLiquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct ISwapXNonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapXNonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultWithdrawalFeesVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"farmingApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmingCenter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getWithdrawalFeePoolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"apr0\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"apr1\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"withdrawalFee\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeVault\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"internalType\":\"struct ISwapXNonfungiblePositionManager.FeesVault[]\",\"name\":\"feeVaults\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ISwapXNonfungiblePositionManager.WithdrawalFeePoolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapXNonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapXNonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint88\",\"name\":\"nonce\",\"type\":\"uint88\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positionsWithdrawalFee\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"withdrawalFeeLiquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFarmingCenter\",\"type\":\"address\"}],\"name\":\"setFarmingCenter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"apr0\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"apr1\",\"type\":\"uint64\"}],\"name\":\"setTokenAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVaultAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"fees\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"vaults\",\"type\":\"address[]\"}],\"name\":\"setVaultsForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"newWithdrawalFee\",\"type\":\"uint16\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toActive\",\"type\":\"bool\"}],\"name\":\"switchFarmingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenFarmedIn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-periphery\",\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\",\"withdrawalFeeliquidity\":\"Withdrawal fee liq\"}},\"FarmingCenter(address)\":{\"params\":{\"farmingCenterAddress\":\"The new address of connected farming center\"}},\"FarmingFailed(uint256)\":{\"details\":\"Should never be emitted\",\"params\":{\"tokenId\":\"The ID of corresponding token\"}},\"FeeVaultForPool(address,address,uint16)\":{\"params\":{\"fee\":\"Percentage of withdrawal fee that will be sent to the vault\",\"feeVault\":\"The address of the fee vault\",\"pool\":\"The address of the pool to which the vault have been applied\"}},\"IncreaseLiquidity(uint256,uint128,uint128,uint256,uint256,address)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"actualLiquidity\":\"the actual liquidity that was added into a pool. Could differ from _liquidity_ when using FeeOnTransfer tokens\",\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidityDesired\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"approveForFarming(uint256,bool,address)\":{\"params\":{\"approve\":\"New status of approval\",\"farmingAddress\":\"The address of farming: used to prevent tx frontrun\",\"tokenId\":\"The ID of the token that is being approved / unapproved\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"calculateLatestWithdrawalFeesLiquidity(uint256)\":{\"params\":{\"tokenId\":\"Position ID\"},\"returns\":{\"latestWithdrawalFeeLiquidity\":\"The actual withdrawal fee liquidity\"}},\"calculatePendingWithdrawalFeesLiquidity(uint256)\":{\"params\":{\"tokenId\":\"Position ID\"},\"returns\":{\"pendingWithdrawalFeeLiquidity\":\"The pending withdrawal fee liquidity\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"defaultWithdrawalFeesVault()\":{\"returns\":{\"vault\":\"The actual vault address\"}},\"farmingCenter()\":{\"returns\":{\"_0\":\"The address of the farming center contract, which handles farmings logic\"}},\"getWithdrawalFeePoolParams(address)\":{\"params\":{\"pool\":\"Pool address\"},\"returns\":{\"params\":\"params\"}},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"If native token is used as input, this function should be accompanied by a `refundNativeToken` in multicall to avoid potential loss of native tokens\",\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to achieve resulting liquidity\",\"amount1\":\"The amount of token1 to achieve resulting liquidity\",\"liquidity\":\"The liquidity delta amount as a result of the increase\"}},\"isApprovedOrOwner(address,uint256)\":{\"details\":\"Requirement: `tokenId` must exist\"},\"mint((address,address,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.If native token is used as input, this function should be accompanied by a `refundNativeToken` in multicall to avoid potential loss of native tokens\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The liquidity delta amount as a result of the increase\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"positionsWithdrawalFee(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"lastUpdateTimestamp\":\"Last increase/decrease liquidity timestamp\",\"withdrawalFeeLiquidity\":\"Liqudity of accumulated withdrawal fee\"}},\"setFarmingCenter(address)\":{\"details\":\"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE\",\"params\":{\"newFarmingCenter\":\"The new address of farmingCenter\"}},\"setTokenAPR(address,uint64,uint64)\":{\"details\":\"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE\",\"params\":{\"apr0\":\"APR of LST token0\",\"apr1\":\"APR of LST token1\",\"pool\":\"The address of the pool to which the settings have been applied\"}},\"setVaultAddress(address)\":{\"details\":\"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE\",\"params\":{\"newVault\":\"The new address of vault\"}},\"setVaultsForPool(address,uint16[],address[])\":{\"details\":\"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE\",\"params\":{\"fees\":\"array of fees values\",\"pool\":\"The address of the pool to which the settings have been applied\",\"vaults\":\"array of vault addresses\"}},\"setWithdrawalFee(address,uint16)\":{\"details\":\"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE\",\"params\":{\"newWithdrawalFee\":\"Percentage of lst token earnings that will be sent to the vault\",\"pool\":\"The address of the pool to which the settings have been applied\"}},\"switchFarmingStatus(uint256,bool)\":{\"details\":\"can be called only by farmingCenter\",\"params\":{\"toActive\":\"The new status\",\"tokenId\":\"The ID of the token\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"FarmingCenter(address)\":{\"notice\":\"Emitted after farming center address change\"},\"FarmingFailed(uint256)\":{\"notice\":\"Emitted if farming failed in call from NonfungiblePositionManager.\"},\"FeeVaultForPool(address,address,uint16)\":{\"notice\":\"Emitted when a fee vault is set for a pool\"},\"IncreaseLiquidity(uint256,uint128,uint128,uint256,uint256,address)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"approveForFarming(uint256,bool,address)\":{\"notice\":\"Changes approval of token ID for farming.\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"calculateLatestWithdrawalFeesLiquidity(uint256)\":{\"notice\":\"Returns actual withdrawal fee liquidity of position\"},\"calculatePendingWithdrawalFeesLiquidity(uint256)\":{\"notice\":\"Returns pending withdrawal fee liquidity\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"defaultWithdrawalFeesVault()\":{\"notice\":\"Returns vault address to which fees will be sent\"},\"farmingApprovals(uint256)\":{\"notice\":\"Returns the address of farming that is approved for this token, if any\"},\"farmingCenter()\":{\"notice\":\"Returns the address of currently connected farming, if any\"},\"getWithdrawalFeePoolParams(address)\":{\"notice\":\"Returns withdrawal fee params for pool\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether `spender` is allowed to manage `tokenId`\"},\"mint((address,address,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"positionsWithdrawalFee(uint256)\":{\"notice\":\"Returns withdrawalFee information associated with a given token ID\"},\"setFarmingCenter(address)\":{\"notice\":\"Changes address of farmingCenter\"},\"setTokenAPR(address,uint64,uint64)\":{\"notice\":\"Changes tokens apr for pool\"},\"setVaultAddress(address)\":{\"notice\":\"Changes vault address\"},\"setVaultsForPool(address,uint16[],address[])\":{\"notice\":\"Changes fee vault for pool\"},\"setWithdrawalFee(address,uint16)\":{\"notice\":\"Changes withdrawalFee for pool\"},\"switchFarmingStatus(uint256,bool)\":{\"notice\":\"Changes farming status of token to 'farmed' or 'not farmed'\"},\"tokenFarmedIn(uint256)\":{\"notice\":\"Returns the address of farming in which this token is farmed, if any\"}},\"notice\":\"Wraps Algebra positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISwapXNonfungiblePositionManager.sol\":\"ISwapXNonfungiblePositionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"contracts/interfaces/ISwapXNonfungiblePositionManager.sol\":{\"keccak256\":\"0x92d7ed071b7d431952a07b2ade50606a04130ffc042bdb902d7c633e38632e70\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://516ab8094e72098cd6e933f8830da0cdf59dc7fa9873ad68c8f20d994d02ba25\",\"dweb:/ipfs/QmRAUpqweNavVGDDBuyG8ErUeLD3dXJCWwHBNY8J5kVxZf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Collect","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"uint128","name":"withdrawalFeeliquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"DecreaseLiquidity","anonymous":false},{"inputs":[{"internalType":"address","name":"farmingCenterAddress","type":"address","indexed":false}],"type":"event","name":"FarmingCenter","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"FarmingFailed","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":false},{"internalType":"address","name":"feeVault","type":"address","indexed":false},{"internalType":"uint16","name":"fee","type":"uint16","indexed":false}],"type":"event","name":"FeeVaultForPool","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint128","name":"liquidityDesired","type":"uint128","indexed":false},{"internalType":"uint128","name":"actualLiquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false},{"internalType":"address","name":"pool","type":"address","indexed":false}],"type":"event","name":"IncreaseLiquidity","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"approve","type":"bool"},{"internalType":"address","name":"farmingAddress","type":"address"}],"stateMutability":"payable","type":"function","name":"approveForFarming"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"payable","type":"function","name":"burn"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateLatestWithdrawalFeesLiquidity","outputs":[{"internalType":"uint128","name":"latestWithdrawalFeeLiquidity","type":"uint128"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculatePendingWithdrawalFeesLiquidity","outputs":[{"internalType":"uint128","name":"pendingWithdrawalFeeLiquidity","type":"uint128"}]},{"inputs":[{"internalType":"struct ISwapXNonfungiblePositionManager.CollectParams","name":"params","type":"tuple","components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Max","type":"uint128"},{"internalType":"uint128","name":"amount1Max","type":"uint128"}]}],"stateMutability":"payable","type":"function","name":"collect","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"struct ISwapXNonfungiblePositionManager.DecreaseLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"decreaseLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultWithdrawalFeesVault","outputs":[{"internalType":"address","name":"vault","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"farmingApprovals","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"farmingCenter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getWithdrawalFeePoolParams","outputs":[{"internalType":"struct ISwapXNonfungiblePositionManager.WithdrawalFeePoolParams","name":"params","type":"tuple","components":[{"internalType":"uint64","name":"apr0","type":"uint64"},{"internalType":"uint64","name":"apr1","type":"uint64"},{"internalType":"uint16","name":"withdrawalFee","type":"uint16"},{"internalType":"struct ISwapXNonfungiblePositionManager.FeesVault[]","name":"feeVaults","type":"tuple[]","components":[{"internalType":"address","name":"feeVault","type":"address"},{"internalType":"uint16","name":"fee","type":"uint16"}]}]}]},{"inputs":[{"internalType":"struct ISwapXNonfungiblePositionManager.IncreaseLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"increaseLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isApprovedOrOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct ISwapXNonfungiblePositionManager.MintParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"positions","outputs":[{"internalType":"uint88","name":"nonce","type":"uint88"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"positionsWithdrawalFee","outputs":[{"internalType":"uint32","name":"lastUpdateTimestamp","type":"uint32"},{"internalType":"uint128","name":"withdrawalFeeLiquidity","type":"uint128"}]},{"inputs":[{"internalType":"address","name":"newFarmingCenter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFarmingCenter"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint64","name":"apr0","type":"uint64"},{"internalType":"uint64","name":"apr1","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setTokenAPR"},{"inputs":[{"internalType":"address","name":"newVault","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setVaultAddress"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint16[]","name":"fees","type":"uint16[]"},{"internalType":"address[]","name":"vaults","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"setVaultsForPool"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint16","name":"newWithdrawalFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setWithdrawalFee"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"toActive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"switchFarmingStatus"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenFarmedIn","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"approveForFarming(uint256,bool,address)":{"params":{"approve":"New status of approval","farmingAddress":"The address of farming: used to prevent tx frontrun","tokenId":"The ID of the token that is being approved / unapproved"}},"burn(uint256)":{"params":{"tokenId":"The ID of the token that is being burned"}},"calculateLatestWithdrawalFeesLiquidity(uint256)":{"params":{"tokenId":"Position ID"},"returns":{"latestWithdrawalFeeLiquidity":"The actual withdrawal fee liquidity"}},"calculatePendingWithdrawalFeesLiquidity(uint256)":{"params":{"tokenId":"Position ID"},"returns":{"pendingWithdrawalFeeLiquidity":"The pending withdrawal fee liquidity"}},"collect((uint256,address,uint128,uint128))":{"params":{"params":"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 accounted to the position's tokens owed","amount1":"The amount of token1 accounted to the position's tokens owed"}},"defaultWithdrawalFeesVault()":{"returns":{"vault":"The actual vault address"}},"farmingCenter()":{"returns":{"_0":"The address of the farming center contract, which handles farmings logic"}},"getWithdrawalFeePoolParams(address)":{"params":{"pool":"Pool address"},"returns":{"params":"params"}},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"details":"If native token is used as input, this function should be accompanied by a `refundNativeToken` in multicall to avoid potential loss of native tokens","params":{"params":"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 to achieve resulting liquidity","amount1":"The amount of token1 to achieve resulting liquidity","liquidity":"The liquidity delta amount as a result of the increase"}},"isApprovedOrOwner(address,uint256)":{"details":"Requirement: `tokenId` must exist"},"mint((address,address,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{"details":"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.If native token is used as input, this function should be accompanied by a `refundNativeToken` in multicall to avoid potential loss of native tokens","params":{"params":"The params necessary to mint a position, encoded as `MintParams` in calldata"},"returns":{"amount0":"The amount of token0","amount1":"The amount of token1","liquidity":"The liquidity delta amount as a result of the increase","tokenId":"The ID of the token that represents the minted position"}},"positions(uint256)":{"details":"Throws if the token ID is not valid.","params":{"tokenId":"The ID of the token that represents the position"},"returns":{"feeGrowthInside0LastX128":"The fee growth of token0 as of the last action on the individual position","feeGrowthInside1LastX128":"The fee growth of token1 as of the last action on the individual position","liquidity":"The liquidity of the position","nonce":"The nonce for permits","operator":"The address that is approved for spending","tickLower":"The lower end of the tick range for the position","tickUpper":"The higher end of the tick range for the position","token0":"The address of the token0 for a specific pool","token1":"The address of the token1 for a specific pool","tokensOwed0":"The uncollected amount of token0 owed to the position as of the last computation","tokensOwed1":"The uncollected amount of token1 owed to the position as of the last computation"}},"positionsWithdrawalFee(uint256)":{"params":{"tokenId":"The ID of the token that represents the position"},"returns":{"lastUpdateTimestamp":"Last increase/decrease liquidity timestamp","withdrawalFeeLiquidity":"Liqudity of accumulated withdrawal fee"}},"setFarmingCenter(address)":{"details":"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE","params":{"newFarmingCenter":"The new address of farmingCenter"}},"setTokenAPR(address,uint64,uint64)":{"details":"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE","params":{"apr0":"APR of LST token0","apr1":"APR of LST token1","pool":"The address of the pool to which the settings have been applied"}},"setVaultAddress(address)":{"details":"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE","params":{"newVault":"The new address of vault"}},"setVaultsForPool(address,uint16[],address[])":{"details":"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE","params":{"fees":"array of fees values","pool":"The address of the pool to which the settings have been applied","vaults":"array of vault addresses"}},"setWithdrawalFee(address,uint16)":{"details":"can be called only by factory owner or NONFUNGIBLE_POSITION_MANAGER_ADMINISTRATOR_ROLE","params":{"newWithdrawalFee":"Percentage of lst token earnings that will be sent to the vault","pool":"The address of the pool to which the settings have been applied"}},"switchFarmingStatus(uint256,bool)":{"details":"can be called only by farmingCenter","params":{"toActive":"The new status","tokenId":"The ID of the token"}}},"version":1},"userdoc":{"kind":"user","methods":{"approveForFarming(uint256,bool,address)":{"notice":"Changes approval of token ID for farming."},"burn(uint256)":{"notice":"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."},"calculateLatestWithdrawalFeesLiquidity(uint256)":{"notice":"Returns actual withdrawal fee liquidity of position"},"calculatePendingWithdrawalFeesLiquidity(uint256)":{"notice":"Returns pending withdrawal fee liquidity"},"collect((uint256,address,uint128,uint128))":{"notice":"Collects up to a maximum amount of fees owed to a specific position to the recipient"},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"notice":"Decreases the amount of liquidity in a position and accounts it to the position"},"defaultWithdrawalFeesVault()":{"notice":"Returns vault address to which fees will be sent"},"farmingApprovals(uint256)":{"notice":"Returns the address of farming that is approved for this token, if any"},"farmingCenter()":{"notice":"Returns the address of currently connected farming, if any"},"getWithdrawalFeePoolParams(address)":{"notice":"Returns withdrawal fee params for pool"},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"},"isApprovedOrOwner(address,uint256)":{"notice":"Returns whether `spender` is allowed to manage `tokenId`"},"mint((address,address,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{"notice":"Creates a new position wrapped in a NFT"},"positions(uint256)":{"notice":"Returns the position information associated with a given token ID."},"positionsWithdrawalFee(uint256)":{"notice":"Returns withdrawalFee information associated with a given token ID"},"setFarmingCenter(address)":{"notice":"Changes address of farmingCenter"},"setTokenAPR(address,uint64,uint64)":{"notice":"Changes tokens apr for pool"},"setVaultAddress(address)":{"notice":"Changes vault address"},"setVaultsForPool(address,uint16[],address[])":{"notice":"Changes fee vault for pool"},"setWithdrawalFee(address,uint16)":{"notice":"Changes withdrawalFee for pool"},"switchFarmingStatus(uint256,bool)":{"notice":"Changes farming status of token to 'farmed' or 'not farmed'"},"tokenFarmedIn(uint256)":{"notice":"Returns the address of farming in which this token is farmed, if any"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/ISwapXNonfungiblePositionManager.sol":"ISwapXNonfungiblePositionManager"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/interfaces/ISwapXNonfungiblePositionManager.sol":{"keccak256":"0x92d7ed071b7d431952a07b2ade50606a04130ffc042bdb902d7c633e38632e70","urls":["bzz-raw://516ab8094e72098cd6e933f8830da0cdf59dc7fa9873ad68c8f20d994d02ba25","dweb:/ipfs/QmRAUpqweNavVGDDBuyG8ErUeLD3dXJCWwHBNY8J5kVxZf"],"license":"GPL-2.0-or-later"}},"version":1},"id":20}